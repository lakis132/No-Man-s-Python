import random
import time
from collections import defaultdict

class Планета:
    def __init__(self, название):
        self.название = название
        self.биом = random.choice([
            "Райский", "Пустыня", "Ледяной", "Токсичный", "Вулканический",
            "Океанический", "Болотный", "Радиоактивный", "Кристальный", "Грибной"
        ])
        self.флора = random.randint(4, 10)
        self.фауна = random.randint(4, 10)
        self.ресурсы = defaultdict(int)
        for ресурс in ["Железная руда", "Медная руда", "Золотая руда", "Кристаллы", "Камень"]:
            self.ресурсы[ресурс] = random.randint(10, 60)
        
        self.есть_деревья = random.choices([True, False], weights=[self.флора + 5, 10 - self.флора])[0]
        self.есть_животные = random.choices([True, False], weights=[self.фауна + 5, 10 - self.фауна])[0]
        self.есть_кислородные_растения = random.choices([True, False], weights=[self.флора + 2, 10 - self.флора])[0]
        self.деревья_срублены = False
        self.особый_ресурс = random.choice(["Кислородный мох", "Воздушные водоросли", "Кислородный гриб"])
        self.опасность = random.randint(1, 8)

    def показать_информацию(self):
        print(f"\n=== ПЛАНЕТА {self.название} ===")
        print(f"Биом: {self.биом}")
        print(f"Флора: {self.флора}/10, Фауна: {self.фауна}/10")
        print(f"Уровень опасности: {self.опасность}/10")
        print("\nРесурсы:")
        for ресурс, количество in self.ресурсы.items():
            if количество > 0:
                print(f"- {ресурс}: {количество} единиц")
        if self.есть_кислородные_растения:
            print(f"\nОсобый ресурс: {self.особый_ресурс} (восполняет кислород)")
        if self.есть_деревья and not self.деревья_срублены:
            print("\nНа планете есть деревья")
        if self.есть_животные:
            print("\nНа планете есть животные")

class Игрок:
    def __init__(self):
        self.инвентарь = defaultdict(int)
        self.посещенные_планеты = set()
        self.оружие = "Нет"
        self.инструменты = {"Кирка": False, "Топор": False}
        self.печка = False
        self.кислородный_баллон = False
        self.сырое_мясо = 0
        self.жареное_мясо = 0
        self.древесина = 0
        self.здоровье = 100
        self.кислород = 100
        self.урон_оружия = 0
        self.экипировка = {"Броня": False}

    def проверить_опасность(self, планета):
        if random.randint(1, 10) <= max(1, планета.опасность - 2):
            self.атаковать(планета.опасность)

    def атаковать(self, уровень_опасности):
        базовый_урон = random.randint(3, 8) * уровень_опасности // 3
        if self.оружие == "Нет":
            полученный_урон = базовый_урон + 2
            self.здоровье -= полученный_урон
            print(f"\nНа вас напали! Потеряно {полученный_урон} здоровья (вы без оружия)!")
        else:
            защита = 3 if self.экипировка["Броня"] else 0
            полученный_урон = max(1, базовый_урон - self.урон_оружия - защита)
            self.здоровье -= полученный_урон
            print(f"\nНа вас напали! Потеряно {полученный_урон} здоровья (ваше оружие: {self.оружие})!")

    def добыть_ресурсы(self, планета):
        if self.кислород < 10:
            print("\nСлишком мало кислорода для добычи!")
            return False
            
        self.кислород -= 10
        self.проверить_опасность(планета)
        
        if self.инструменты["Кирка"]:
            множитель = 1.0
            print("\nВы добываете ресурсы киркой:")
        else:
            множитель = 0.3
            self.здоровье -= 3
            print("\nВы ковыряете ресурсы руками (здоровье -3):")
        
        for ресурс, количество in планета.ресурсы.items():
            if количество > 0:
                добыто = max(1, int(random.randint(1, min(5, количество)) * множитель))
                self.инвентарь[ресурс] += добыто
                планета.ресурсы[ресурс] -= добыто
                print(f"- {ресурс}: +{добыто}")
        return True

    def собрать_кислород(self, планета):
        if not планета.есть_кислородные_растения:
            print("\nНа этой планете нет кислородных растений")
            return False
            
        if self.кислород >= 100:
            print("\nВаш кислород уже полный!")
            return False
            
        кислород = random.randint(20, 30)
        self.кислород = min(100, self.кислород + кислород)
        print(f"\nВы собрали {планета.особый_ресурс}. Кислород +{кислород}")
        self.проверить_опасность(планета)
        return True

    def срубить_дерево(self, планета):
        if not планета.есть_деревья or планета.деревья_срублены:
            print("\nЗдесь нет деревьев для рубки")
            return False
            
        if self.кислород < 4:
            print("\nСлишком мало кислорода для рубки деревьев!")
            return False
            
        self.кислород -= 4
        self.проверить_опасность(планета)
        
        if self.инструменты["Топор"]:
            добыча = random.randint(6, 12)
            print(f"\nВы срубили дерево топором и получили {добыча} древесины!")
        else:
            добыча = random.randint(2, 5)
            self.здоровье -= 1
            print(f"\nВы ломаете ветки руками и получаете {добыча} древесины (здоровье -1)!")
        
        self.древесина += добыча
        планета.деревья_срублены = True
        print(f"Всего древесины: {self.древесина}")
        return True

    def собрать_ягоды(self, планета):
        if not планета.есть_деревья:
            print("\nЗдесь нет деревьев с ягодами")
            return False
            
        if self.кислород < 2:
            print("\nСлишком мало кислорода для сбора ягод!")
            return False
            
        self.кислород -= 2
        self.проверить_опасность(планета)
        
        ягоды = random.randint(3, 8)
        self.инвентарь["Ягоды"] += ягоды
        восстановлено = 4 * ягоды
        self.здоровье = min(100, self.здоровье + восстановлено)
        print(f"\nВы собрали {ягоды} ягод! Здоровье +{восстановлено}")
        return True

    def охота(self, планета):
        if not планета.есть_животные:
            print("\nЗдесь нет животных для охоты")
            return False
            
        if self.оружие == "Нет":
            print("\nНужно оружие для охоты!")
            return False
            
        if self.кислород < 6:
            print("\nСлишком мало кислорода для охоты!")
            return False
            
        self.кислород -= 6
        self.проверить_опасность(планета)
        
        добыча = random.randint(2, 4)
        self.сырое_мясо += добыча
        print(f"\nВы добыли {добыча} сырого мяса!")
        return True

    def пожарить_мясо(self):
        if not self.печка:
            print("\nНужна печка для жарки мяса!")
            return False
            
        if self.сырое_мясо <= 0:
            print("\nНет сырого мяса для жарки")
            return False
            
        if self.кислород < 3:
            print("\nСлишком мало кислорода для готовки!")
            return False
            
        self.кислород -= 3
        жареное = self.сырое_мясо
        self.жареное_мясо += жареное
        self.сырое_мясо = 0
        восстановлено = 15 * жареное
        self.здоровье = min(100, self.здоровье + восстановлено)
        print(f"\nВы пожарили {жареное} мяса! Здоровье +{восстановлено}")
        return True

    def использовать_кислородный_баллон(self):
        if not self.кислородный_баллон:
            print("\nУ вас нет кислородного баллона!")
            return False
            
        if self.кислород >= 100:
            print("\nВаш кислород уже полный!")
            return False
            
        self.кислород = min(100, self.кислород + 60)
        print("\nВы использовали кислородный баллон. Кислород +60")
        return True

    def показать_инвентарь(self):
        print("\n=== ИНВЕНТАРЬ И СТАТИСТИКА ===")
        print(f"Здоровье: {self.здоровье}/100")
        print(f"Кислород: {self.кислород}/100")
        print(f"\nОружие: {self.оружие} (урон: {self.урон_оружия})")
        print("Инструменты и экипировка:")
        for инструмент, есть in self.инструменты.items():
            print(f"- {инструмент}: {'Есть' if есть else 'Нет'}")
        print(f"- Броня: {'Есть' if self.экипировка['Броня'] else 'Нет'}")
        print(f"- Печка: {'Есть' if self.печка else 'Нет'}")
        print(f"- Кислородный баллон: {'Есть' if self.кислородный_баллон else 'Нет'}")
        
        print("\nРесурсы:")
        for ресурс, количество in self.инвентарь.items():
            if количество > 0:
                print(f"- {ресурс}: {количество}")
        print(f"\nДревесина: {self.древесина}")
        print(f"Сырое мясо: {self.сырое_мясо}")
        print(f"Жареное мясо: {self.жареное_мясо}")
        
        print(f"\nПосещено планет: {len(self.посещенные_планеты)}")

    def показать_крафты(self):
        while True:
            print("\n=== МЕНЮ КРАФТА ===")
            print("1. Деревянный меч (5 древесины) - урон 2")
            print("2. Каменный меч (10 камня, 5 древесины) - урон 4")
            print("3. Железный меч (15 железа, 5 древесины) - урон 6")
            print("4. Топор (8 древесины, 5 камня)")
            print("5. Кирка (10 железа, 5 камня)")
            print("6. Печка (12 железа, 8 меди)")
            print("7. Кислородный баллон (15 железа, 8 кристаллов)")
            print("8. Кожаная броня (10 кожи, 5 ниток)")
            print("9. Назад")
            
            выбор = input("Выберите предмет для крафта (1-9): ").strip()
            
            if выбор == "1":
                self.создать_предмет("Деревянный меч", {"Древесина": 5}, урон=2)
            elif выбор == "2":
                self.создать_предмет("Каменный меч", {"Камень": 10, "Древесина": 5}, урон=4)
            elif выбор == "3":
                self.создать_предмет("Железный меч", {"Железная руда": 15, "Древесина": 5}, урон=6)
            elif выбор == "4":
                self.создать_инструмент("Топор", {"Древесина": 8, "Камень": 5})
            elif выбор == "5":
                self.создать_инструмент("Кирка", {"Железная руда": 10, "Камень": 5})
            elif выбор == "6":
                self.создать_печку()
            elif выбор == "7":
                self.создать_кислородный_баллон()
            elif выбор == "8":
                self.создать_броню()
            elif выбор == "9":
                break
            else:
                print("Неверный выбор. Попробуйте снова.")

    def создать_предмет(self, название, требования, урон=0):
        for ресурс, количество in требования.items():
            if (ресурс == "Древесина" and self.древесина < количество) or \
               (ресурс != "Древесина" and self.инвентарь.get(ресурс, 0) < количество):
                print(f"\nНе хватает {ресурс} ({количество} требуется)")
                return
                
        for ресурс, количество in требования.items():
            if ресурс == "Древесина":
                self.древесина -= количество
            else:
                self.инвентарь[ресурс] -= количество
                
        self.оружие = название
        self.урон_оружия = урон
        print(f"\nВы создали {название} (урон: {урон})!")

    def создать_инструмент(self, название, требования):
        for ресурс, количество in требования.items():
            if (ресурс == "Древесина" and self.древесина < количество) or \
               (ресурс != "Древесина" and self.инвентарь.get(ресурс, 0) < количество):
                print(f"\nНе хватает {ресурс} ({количество} требуется)")
                return
                
        for ресурс, количество in требования.items():
            if ресурс == "Древесина":
                self.древесина -= количество
            else:
                self.инвентарь[ресурс] -= количество
                
        self.инструменты[название] = True
        print(f"\nВы создали {название}!")

    def создать_печку(self):
        if self.инвентарь["Железная руда"] < 12 or self.инвентарь["Медная руда"] < 8:
            print("\nНужно 12 железа и 8 меди для печки")
            return
            
        self.инвентарь["Железная руда"] -= 12
        self.инвентарь["Медная руда"] -= 8
        self.печка = True
        print("\nВы создали печку! Теперь можно жарить мясо.")

    def создать_кислородный_баллон(self):
        if self.инвентарь["Железная руда"] < 15 or self.инвентарь["Кристаллы"] < 8:
            print("\nНужно 15 железа и 8 кристаллов для кислородного баллона")
            return
            
        self.инвентарь["Железная руда"] -= 15
        self.инвентарь["Кристаллы"] -= 8
        self.кислородный_баллон = True
        print("\nВы создали кислородный баллон! Можно пополнить кислород в любое время.")

    def создать_броню(self):
        if self.инвентарь.get("Кожа", 0) < 10 or self.инвентарь.get("Нитки", 0) < 5:
            print("\nНужно 10 кожи и 5 ниток для брони")
            return
            
        self.инвентарь["Кожа"] -= 10
        self.инвентарь["Нитки"] -= 5
        self.экипировка["Броня"] = True
        print("\nВы создали кожаную броню! Теперь вы получаете меньше урона.")

def сгенерировать_название_планеты():
    приставки = ["Альфа", "Бета", "Гамма", "Дельта", "Эпсилон", "Зета", "Эта", "Тета", "Йота", "Каппа"]
    суффиксы = ["Прайм", "Секунда", "Терция", "Кварта", "Ультима", "Экстра", "Магна", "Минор", "Сола", "Луна"]
    return f"{random.choice(приставки)}-{random.randint(100, 999)} {random.choice(суффиксы)}"

def показать_обучение():
    print("\n=== ОБУЧЕНИЕ ===")
    print("Добро пожаловать в No Man's Python!")
    print("Ваша цель - исследовать планеты, собирать ресурсы и выживать.")
    
    print("\nОсновные механики:")
    print("- Каждое действие тратит кислород")
    print("- Без кислорода вы не сможете действовать")
    print("- Здоровье восстанавливается ягодами и жареным мясом")
    print("- Ресурсы можно добывать без инструментов, но это менее эффективно")
    
    print("\nСоветы для начала:")
    print("1. Сначала собирайте ягоды и кислородные растения")
    print("2. Добывайте немного ресурсов без инструментов")
    print("3. Создайте кирку и топор (меню крафта)")
    print("4. Охотьтесь на животных для мяса (нужно оружие)")
    print("5. Создайте печку для жарки мяса")
    
    print("\nОпасности:")
    print("- На планетах могут нападать враги")
    print("- Без оружия вы получите больше урона")
    print("- Броня уменьшает получаемый урон")
    
    input("\nНажмите Enter чтобы продолжить...")

def начать_игру():
    игрок = Игрок()
    print("\n=== НАЧАЛО ИГРЫ ===")
    print("Ваш корабль приземляется на первой планете...")
    
    while True:
        if игрок.здоровье <= 0:
            print("\n=== ВАШЕ ЗДОРОВЬЕ НУЛЕВОЕ ===")
            print("Игра окончена. Вы не выжили в суровых условиях космоса.")
            break
            
        if игрок.кислород <= 0:
            print("\n=== ЗАКОНЧИЛСЯ КИСЛОРОД ===")
            print("Игра окончена. Без кислорода вы не смогли продолжить исследование.")
            break

        print(f"\nКислород: {игрок.кислород}/100 | Здоровье: {игрок.здоровье}/100")
        print("1. Отправиться к новой планете")
        print("2. Показать инвентарь")
        print("3. Меню крафта")
        print("4. Использовать кислородный баллон")
        print("5. Выход в главное меню")
        
        выбор = input("Выберите действие (1-5): ").strip()
        
        if выбор == "1":
            название_планеты = сгенерировать_название_планеты()
            планета = Планета(название_планеты)
            игрок.посещенные_планеты.add(название_планеты)
            
            print(f"\nПрибытие на планету {планета.название} ({планета.биом} биом)")
            планета.показать_информацию()
            
            while True:
                print(f"\nКислород: {игрок.кислород}/100 | Здоровье: {игрок.здоровье}/100")
                print("1. Исследовать планету (шанс найти ресурсы)")
                print("2. Добыть ресурсы (можно без кирки)")
                print("3. Собрать кислородные растения")
                print("4. Срубить дерево (можно без топора)")
                print("5. Собрать ягоды")
                print("6. Охота (нужно оружие)")
                print("7. Пожарить мясо (нужна печка)")
                print("8. Вернуться на корабль")
                
                действие = input("Выберите действие (1-8): ").strip()
                
                if действие == "1":
                    игрок.проверить_опасность(планета)
                    print("\nВы исследуете планету...")
                    time.sleep(1)
                    if random.random() < 0.4:
                        print("Вы нашли случайные ресурсы!")
                        игрок.добыть_ресурсы(планета)
                    else:
                        print("Ничего интересного не найдено.")
                
                elif действие == "2":
                    игрок.добыть_ресурсы(планета)
                
                elif действие == "3":
                    игрок.собрать_кислород(планета)
                
                elif действие == "4":
                    игрок.срубить_дерево(планета)
                
                elif действие == "5":
                    игрок.собрать_ягоды(планета)
                
                elif действие == "6":
                    игрок.охота(планета)
                
                elif действие == "7":
                    игрок.пожарить_мясо()
                
                elif действие == "8":
                    print("\nВозвращаемся на корабль...")
                    time.sleep(1)
                    break
                
                else:
                    print("Неверный выбор. Попробуйте снова.")
                
                # Постепенная трата кислорода
                игрок.кислород = max(0, игрок.кислород - 0.5)
                
                # Проверка состояния после каждого действия
                if игрок.здоровье <= 0 or игрок.кислород <= 0:
                    break
        
        elif выбор == "2":
            игрок.показать_инвентарь()
        
        elif выбор == "3":
            игрок.показать_крафты()
        
        elif выбор == "4":
            игрок.использовать_кислородный_баллон()
        
        elif выбор == "5":
            print("\nВозвращаемся в главное меню...")
            break
        
        else:
            print("Неверный выбор. Попробуйте снова.")

def главное_меню():
    while True:
        print("\n=== NO MAN'S PYTHON ===")
        print("1. Начать игру")
        print("2. Обучение")
        print("3. Выход")
        
        выбор = input("Выберите действие (1-3): ").strip()
        
        if выбор == "1":
            начать_игру()
        elif выбор == "2":
            показать_обучение()
        elif выбор == "3":
            print("\nСпасибо за игру! До свидания!")
            break
        else:
            print("Неверный выбор. Попробуйте снова.")

if __name__ == "__main__":
    print("Загрузка игры...")
    time.sleep(1)
    главное_меню()